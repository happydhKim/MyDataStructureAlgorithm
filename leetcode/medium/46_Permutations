/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var permute = function(nums) {
  let result = [];
  const backtrack = (i, nums) => {
    if (i === nums.length) {
      result.push(nums.slice());
      return;
    }  
    for(let j = i; j < nums.length; j++){
      [nums[i], nums[j]] = [nums[j], nums[i]];
      backtrack(i + 1, nums);
      [nums[i], nums[j]] = [nums[j], nums[i]];
    }
  }
  backtrack(0, nums);
  return result;
};

console.log(permute([1,2,3]));
console.log(permute([0,1]));
console.log(permute([1]));

// Input: nums = [1,2,3]
// Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

// Input: nums = [0,1]
// Output: [[0,1],[1,0]]

// Input: nums = [1]
// Output: [[1]]